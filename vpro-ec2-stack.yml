---
- name: setup vprofile stack
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import Vpc setup variables
      include_vars: vpc_setup_vars.yml

    - name: Import Vpc output variables
      include_vars: vpc-output_vars.yml

    - name: import vprofile setup variables
      include_vars: vprostack_vars.yml
    
    - name: create vprofile ec2-key
      ec2_key:
        name: vprostack-key
        region: "{{region}}"
      register: vprokey_out
    - debug:
        var: vprokey_out
    - name: save private key into vprostack-key.pem
      copy: 
        content: "{{vprokey_out.key.private_key}}"
        dest: "./vprostack-key.pem"
        mode: 0600
      when: vprokey_out.changed
    
    - name: creating security group for load balancer
      ec2_group:
        name: vproELB-sg
        description: allow port 80 from every where and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out
    - debug:
        var: vproELBSG_out

    - name: create security group for vprofile stack
      ec2_group:
        name: vprostack-sg
        description: allow port 22 from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no  #to get idempotentcy # keeps  existing rules and add new rules
        rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          group_id: "{{vproELBSG_out.group_id}}"  # be careful with notations
        - proto: tcp
          from_port: 22
          to_port: 22
          group_id: "{{BastionSGid}}"
      register: vproStackSG_out
    - debug:
        var: vproStackSG_out
    
    - name: update security group with its own sg id
      ec2_group: 
        name: vprostack-sg
        description: allow 22 port from everywhere and all ports within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: Creating Ngnix web01
      ec2:
        key_name: samantha
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ngnix_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: Devops team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: Devops team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out
    - debug:
        var: web01_out
    
    - name: Creating tomcat instance app01
      ec2:
        key_name: samantha
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: vprofile
          Owner: Devops team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: Devops team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out
    - debug:
        var: app01_out

    - name: creating memcache mc01
      ec2:
        key_name: samantha
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: mc01
          Project: vprofile
          owner: devops team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out
    - debug:
        var: mc01_out
    
    - name: creating rabbitmq rmq01
      ec2:
         key_name: samantha
         region: "{{region}}"
         instance_type: t2.micro
         image_ami: "{{rmq_ami}}"
         wait: yes
         wait_timeout: 300
         instance_tags:
            Name: "rmq01"
            Project: vprofile
            Owner: devops team
         exact_count: 1
         count_tag:
            Name: "mc01"
            Project: vprofile
            Owner: devops team
         group_id: "{{vproStackSG_out.group_id}}"
         vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out
    - debug:
        var: rmq01_out
    
    - name: creating mysql db01
      ec2:
        key_name: samantha
        region: "{{region}}"
        instance_type: t2.micro
        image_ami: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: vprofile
          owner: devops team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: vprofile
          owner: devops team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out
    - debug:
        var: db01_out